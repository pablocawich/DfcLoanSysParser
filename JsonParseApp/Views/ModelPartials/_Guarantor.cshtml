@using System.Web.DynamicData
@model IList<JsonParseApp.Models.Guarantor>
@{
                                            
    var i = 0;
}
@for(int j = 0; j < Model.Count; j++)
{
    @Html.HiddenFor(m=>Model[j].GuarantorPersonalId)
    @Html.HiddenFor(m=>Model[j].GuarantorFinancialId)
   
    <div class="alert alert-danger" role="alert">
        <h6><strong>Guarantor @(++i)</strong></h6>
   
        <div class="form-group">
            <div class="form-check">
                <input class="form-check-input gridCheck" type="checkbox" id="gridCheck@(i)" value="@(i)">
                <p>Exclude from Import</p>
            </div>
        </div>
        <div class="form-group" id="applicantIdBox@(i)" hidden>
            <p><i>Ensure a valid user ID is provided.</i></p>
            @Html.LabelFor(m => Model[j].ApplicantId, new { @class = "control-label" })
            <div class="form-inline">
                @Html.TextBoxFor(m => Model[j].ApplicantId, new { @class = "form-control app-id" })
                <button type="button" class="btn btn-sm btn-outline-primary validateBtn"><i class="fa fa-exclamation-circle"></i> Validate</button>
               <span id="serverValidationMssg" style="left: 305px;position: absolute;"></span>
            </div>
            <span class="emssg hidden">you have exceeded the required amount</span>
        </div>
    </div>
    
        <h6>Personal Information</h6>
        <hr />

        <div class="form-row">
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersFirstname, new {  @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersFirstname, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersMiddlename, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersMiddlename, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersLastname, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersLastname, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersSex, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersSex, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersNationality, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersNationality, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersBirthdate, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersBirthdate, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersMailingAddress1, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersMailingAddress1, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersMailingAddress2, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersMailingAddress2, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersMailingcountry, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersMailingcountry, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersMailingtown, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersMailingtown, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersTypeofid, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersTypeofid, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersIdnumber, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersIdnumber, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersMarriedstatus, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersMarriedstatus, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersNextKin, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersNextKin, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersRelationshipkin, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersRelationshipkin, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersEmailname, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersEmailname, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersHomephone, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersHomephone, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersOtherphone, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersOtherphone, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersWorkphone, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersWorkphone, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorPersonal.CustomersMobilphone, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorPersonal.CustomersMobilphone, new {@readonly = "readonly", @class = "form-control" })
            </div>
        </div>

        <h6>Financial Information</h6>
        <hr />

        <div class="form-row">
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorFinancial.CustomersBusinessplace, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorFinancial.CustomersBusinessplace, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorFinancial.CustomersEmpstatus, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorFinancial.CustomersEmpstatus, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorFinancial.CustomersEmployfrom, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorFinancial.CustomersEmployfrom, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorFinancial.CustomersOccupation, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorFinancial.CustomersOccupation, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorFinancial.CustomersDepends, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorFinancial.CustomersDepends, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorFinancial.CustomersHomeStatus, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorFinancial.CustomersHomeStatus, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorFinancial.CustomersNumInhouse, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorFinancial.CustomersNumInhouse, new {@readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(m => Model[j].GuarantorFinancial.CustomersYearsaddr, new { @class = "control-label" })
                @Html.TextBoxFor(m => Model[j].GuarantorFinancial.CustomersYearsaddr, new {@readonly = "readonly", @class = "form-control" })
            </div>

            @if (Model[j].GuarantorFinancial.Asset != null)
            {

                string name = Html.NameFor(m => m[j].GuarantorFinancial.Asset).ToString();
                string prefix = Html.ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldName(name);
                ViewDataDictionary viewAssetData = new ViewDataDictionary(Html.ViewData)
                {
                    TemplateInfo = new TemplateInfo { HtmlFieldPrefix = name }
                };

                @Html.Partial("~/Views/ModelPartials/_GuaranSets.cshtml", Model[j].GuarantorFinancial.Asset, viewAssetData);
            }
            else
            {
                <h6 style="color: red"><i> Does not contain data in ASSETS</i></h6>
            }

            <hr />

            @if (Model[j].GuarantorFinancial.Liabilities != null)
            {
                string name = Html.NameFor(m => m[j].GuarantorFinancial.Liabilities).ToString();
                string prefix = Html.ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldName(name);
                ViewDataDictionary viewAssetData = new ViewDataDictionary(Html.ViewData)
                {
                    TemplateInfo = new TemplateInfo { HtmlFieldPrefix = name }
                };
                @Html.Partial("~/Views/ModelPartials/_Guaranabilities.cshtml", Model[j].GuarantorFinancial.Liabilities, viewAssetData)
            }
            else
            {
                <h6 style="color: red"><i> not contain data in LIABILITIES</i></h6>
            }

            <hr />
            @if (Model[j].GuarantorFinancial.GrossAnnualFamilyIncome != null)
            {
                string name = Html.NameFor(m => m[j].GuarantorFinancial.GrossAnnualFamilyIncome).ToString();
                string prefix = Html.ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldName(name);
                ViewDataDictionary viewAssetData = new ViewDataDictionary(Html.ViewData)
                {
                    TemplateInfo = new TemplateInfo { HtmlFieldPrefix = name }
                };
                @Html.Partial("~/Views/ModelPartials/_GuaranFamilyIncome.cshtml", Model[j].GuarantorFinancial.GrossAnnualFamilyIncome, viewAssetData)
            }
            else
            {
                <h6 style="color: red"><i> Does not contain data in Gross Family Income</i></h6>
            }

            @Html.HiddenFor(m => Model[j].GuarantorFinancial.Selfemployed)
        </div>
   
}